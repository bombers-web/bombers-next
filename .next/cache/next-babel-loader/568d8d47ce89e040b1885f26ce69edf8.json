{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/components/Games/GameCard.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Badge, Box, Text, SimpleGrid, Flex, Grid, Heading, Stack } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox, Skeleton } from \"@chakra-ui/react\";\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/Image\";\nimport GameInfo from \"./GameInfo\";\n\nvar GameCard = function GameCard(_ref) {\n  var title = _ref.title,\n      link = _ref.link,\n      linkDisplay = _ref.linkDisplay;\n  var styles = {\n    backgroundColor: \"#121212\",\n    // backgroundImage:\n    //   \"linear-gradient(to right bottom, #212121 50%, #7f8c8d 50.3%)\",\n    boxShadow: \"0 1px 4px #151515\"\n  };\n  var games = [];\n  return __jsx(Box, {\n    position: \"relative\",\n    top: \"-100px\",\n    m: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    styles: styles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Stack, {\n    direction: \"row\" // m=\"auto\"\n    ,\n    p: \"8\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, games.map(function (_ref2) {\n    var home = _ref2.home,\n        away = _ref2.away,\n        location = _ref2.location,\n        date = _ref2.date,\n        home_score = _ref2.home_score,\n        away_score = _ref2.away_score,\n        division = _ref2.division;\n    var gameInfo = {\n      homeTeam: _objectSpread(_objectSpread({}, home), {}, {\n        score: home_score\n      }),\n      awayTeam: _objectSpread(_objectSpread({}, away), {}, {\n        score: away_score\n      }),\n      location: location,\n      date: date\n    };\n    return games.length ? __jsx(GameInfo, _extends({}, gameInfo, {\n      division: division,\n      preview: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    })) : __jsx(Skeleton, {\n      height: \"20px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    });\n  }))));\n};\n\n_c = GameCard;\nexport default GameCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCard\");","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/components/Games/GameCard.js"],"names":["React","Badge","Box","Text","SimpleGrid","Flex","Grid","Heading","Stack","Button","Link","LinkBox","Skeleton","Card","Image","GameInfo","GameCard","title","link","linkDisplay","styles","backgroundColor","boxShadow","games","map","home","away","location","date","home_score","away_score","division","gameInfo","homeTeam","score","awayTeam","length"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,OAPF,EAQEC,KARF,QASO,mBATP;AAUA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,EAAgCC,QAAhC,QAAgD,kBAAhD;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAkC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AACjD,MAAMC,MAAM,GAAG;AACbC,IAAAA,eAAe,EAAE,SADJ;AAEb;AACA;AACAC,IAAAA,SAAS,EAAE;AAJE,GAAf;AAMA,MAAMC,KAAK,GAAG,EAAd;AAEA,SACE,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,GAAG,EAAC,QAA7B;AAAsC,IAAA,CAAC,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEH,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,SAAS,EAAC,KADZ,CAEE;AAFF;AAGE,IAAA,CAAC,EAAC,GAHJ;AAIE,IAAA,cAAc,EAAC,cAJjB;AAKE,IAAA,UAAU,EAAC,QALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGG,KAAK,CAACC,GAAN,CACC,iBAQM;AAAA,QAPJC,IAOI,SAPJA,IAOI;AAAA,QANJC,IAMI,SANJA,IAMI;AAAA,QALJC,QAKI,SALJA,QAKI;AAAA,QAJJC,IAII,SAJJA,IAII;AAAA,QAHJC,UAGI,SAHJA,UAGI;AAAA,QAFJC,UAEI,SAFJA,UAEI;AAAA,QADJC,QACI,SADJA,QACI;AACJ,QAAMC,QAAQ,GAAG;AACfC,MAAAA,QAAQ,kCAAOR,IAAP;AAAaS,QAAAA,KAAK,EAAEL;AAApB,QADO;AAEfM,MAAAA,QAAQ,kCAAOT,IAAP;AAAaQ,QAAAA,KAAK,EAAEJ;AAApB,QAFO;AAGfH,MAAAA,QAAQ,EAAEA,QAHK;AAIfC,MAAAA,IAAI,EAAEA;AAJS,KAAjB;AAOA,WAAOL,KAAK,CAACa,MAAN,GACL,MAAC,QAAD,eAAcJ,QAAd;AAAwB,MAAA,QAAQ,EAAED,QAAlC;AAA4C,MAAA,OAAO,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADK,GAGL,MAAC,QAAD;AAAU,MAAA,MAAM,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAKD,GAtBF,CAPH,CADF,CADF,CADF;AAsCD,CA/CD;;KAAMf,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport {\n  Badge,\n  Box,\n  Text,\n  SimpleGrid,\n  Flex,\n  Grid,\n  Heading,\n  Stack,\n} from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox, Skeleton } from \"@chakra-ui/react\";\n\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/Image\";\nimport GameInfo from \"./GameInfo\";\n\nconst GameCard = ({ title, link, linkDisplay }) => {\n  const styles = {\n    backgroundColor: \"#121212\",\n    // backgroundImage:\n    //   \"linear-gradient(to right bottom, #212121 50%, #7f8c8d 50.3%)\",\n    boxShadow: \"0 1px 4px #151515\",\n  };\n  const games = [];\n\n  return (\n    <Box position=\"relative\" top=\"-100px\" m=\"auto\">\n      <Card styles={styles}>\n        <Stack\n          direction=\"row\"\n          // m=\"auto\"\n          p=\"8\"\n          justifyContent=\"space-around\"\n          alignItems=\"center\"\n        >\n          {games.map(\n            ({\n              home,\n              away,\n              location,\n              date,\n              home_score,\n              away_score,\n              division,\n            }) => {\n              const gameInfo = {\n                homeTeam: { ...home, score: home_score },\n                awayTeam: { ...away, score: away_score },\n                location: location,\n                date: date,\n              };\n\n              return games.length ? (\n                <GameInfo {...gameInfo} division={division} preview></GameInfo>\n              ) : (\n                <Skeleton height=\"20px\" />\n              );\n            }\n          )}\n        </Stack>\n      </Card>\n    </Box>\n  );\n};\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}