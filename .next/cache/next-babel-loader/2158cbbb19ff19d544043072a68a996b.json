{"ast":null,"code":"var _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/common/Card.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport Image from \"./image\";\nimport { Box, LinkBox, Badge, Text, Flex } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\nimport { background } from \"@chakra-ui/styled-system\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Card = ({\n  link,\n  as,\n  children,\n  image,\n  border,\n  bgColor,\n  styles,\n  _hover,\n  imageProps\n}) => {\n  const makeClickable = component => link ? __jsx(Link, {\n    as: as,\n    href: link,\n    m: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(LinkBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, component)) : __jsx(React.Fragment, null, component);\n\n  const hoverStyles = link ? {\n    transition: \"all .2s ease-in-out\",\n    boxShadow: \"0px 5px 10px #212121\",\n    _hover: {\n      transform: \"scale(1.02)\",\n      boxShadow: \"0px 5px 10px #21212150\"\n    }\n  } : {};\n\n  const overrideStyles = _objectSpread(_objectSpread({}, styles), {}, {\n    background: bgColor\n  });\n\n  return makeClickable(__jsx(Flex, {\n    minW: \"100%\",\n    maxW: \"5xl\",\n    borderWidth: border ? \"2px\" : 0,\n    overflow: \"hidden\",\n    borderRadius: \"2xl\",\n    borderColor: \"gray.dark\",\n    cursor: \"pointer\",\n    sx: _objectSpread({\n      hoverStyles\n    }, overrideStyles),\n    bgGradient: \"gradient.main\",\n    _hover: _hover,\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, image && __jsx(Box, {\n    sx: {\n      flexGrow: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Image, _extends({\n    image: image\n  }, imageProps, {\n    sx: {\n      objectFit: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }))), __jsx(Box, {\n    flexGrow: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, children)));\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/common/Card.jsx"],"names":["React","Link","Image","Box","LinkBox","Badge","Text","Flex","styled","background","ReactMarkdown","Card","link","as","children","image","border","bgColor","styles","_hover","imageProps","makeClickable","component","hoverStyles","transition","boxShadow","transform","overrideStyles","flexGrow","objectFit"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,IAApC,QAAgD,mBAAhD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,IADY;AAEZC,EAAAA,EAFY;AAGZC,EAAAA,QAHY;AAIZC,EAAAA,KAJY;AAKZC,EAAAA,MALY;AAMZC,EAAAA,OANY;AAOZC,EAAAA,MAPY;AAQZC,EAAAA,MARY;AASZC,EAAAA;AATY,CAAD,KAUP;AACJ,QAAMC,aAAa,GAAIC,SAAD,IACpBV,IAAI,GACF,MAAC,IAAD;AAAM,IAAA,EAAE,EAAEC,EAAV;AAAc,IAAA,IAAI,EAAED,IAApB;AAA0B,IAAA,CAAC,EAAC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUU,SAAV,CADF,CADE,GAKF,4BAAGA,SAAH,CANJ;;AASA,QAAMC,WAAW,GAAGX,IAAI,GACpB;AACEY,IAAAA,UAAU,EAAE,qBADd;AAEEC,IAAAA,SAAS,EAAE,sBAFb;AAGEN,IAAAA,MAAM,EAAE;AACNO,MAAAA,SAAS,EAAE,aADL;AAEND,MAAAA,SAAS,EAAE;AAFL;AAHV,GADoB,GASpB,EATJ;;AAWA,QAAME,cAAc,mCACfT,MADe;AAElBT,IAAAA,UAAU,EAAEQ;AAFM,IAApB;;AAKA,SAAOI,aAAa,CAClB,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,WAAW,EAAEL,MAAM,GAAG,KAAH,GAAW,CAHhC;AAIE,IAAA,QAAQ,EAAC,QAJX;AAKE,IAAA,YAAY,EAAC,KALf;AAME,IAAA,WAAW,EAAC,WANd;AAOE,IAAA,MAAM,EAAC,SAPT;AAQE,IAAA,EAAE;AAAIO,MAAAA;AAAJ,OAAoBI,cAApB,CARJ;AASE,IAAA,UAAU,EAAC,eATb;AAUE,IAAA,MAAM,EAAER,MAVV;AAWE,IAAA,aAAa,EAAC,QAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGJ,KAAK,IACJ,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEb;AAAd,KAAyBK,UAAzB;AAAqC,IAAA,EAAE,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAdJ,EAkBE,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBf,QAAnB,CAlBF,CADkB,CAApB;AAsBD,CA1DD;;AA4DA,eAAeH,IAAf","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport Image from \"./image\";\nimport { Box, LinkBox, Badge, Text, Flex } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\nimport { background } from \"@chakra-ui/styled-system\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst Card = ({\n  link,\n  as,\n  children,\n  image,\n  border,\n  bgColor,\n  styles,\n  _hover,\n  imageProps,\n}) => {\n  const makeClickable = (component) =>\n    link ? (\n      <Link as={as} href={link} m=\"16\">\n        <LinkBox>{component}</LinkBox>\n      </Link>\n    ) : (\n      <>{component}</>\n    );\n\n  const hoverStyles = link\n    ? {\n        transition: \"all .2s ease-in-out\",\n        boxShadow: \"0px 5px 10px #212121\",\n        _hover: {\n          transform: \"scale(1.02)\",\n          boxShadow: \"0px 5px 10px #21212150\",\n        },\n      }\n    : {};\n\n  const overrideStyles = {\n    ...styles,\n    background: bgColor,\n  };\n\n  return makeClickable(\n    <Flex\n      minW=\"100%\"\n      maxW=\"5xl\"\n      borderWidth={border ? \"2px\" : 0}\n      overflow=\"hidden\"\n      borderRadius=\"2xl\"\n      borderColor=\"gray.dark\"\n      cursor=\"pointer\"\n      sx={{ hoverStyles, ...overrideStyles }}\n      bgGradient=\"gradient.main\"\n      _hover={_hover}\n      flexDirection=\"column\"\n    >\n      {image && (\n        <Box sx={{ flexGrow: 2 }}>\n          <Image image={image} {...imageProps} sx={{ objectFit: \"cover\" }} />\n        </Box>\n      )}\n      <Box flexGrow=\"1\">{children}</Box>\n    </Flex>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}