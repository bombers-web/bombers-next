{"ast":null,"code":"var _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { SimpleGrid } from \"@chakra-ui/layout\";\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from \"@chakra-ui/react\";\nimport { groupBy } from \"lodash\";\nimport React from \"react\";\nimport Hero from \"../common/Hero\";\nimport Layout from \"../common/Layout\";\nimport Seo from \"../common/Seo\";\nimport Articles from \"../components/Articles/articles\";\nimport Games from \"../components/Games\";\nimport { fetchAPI } from \"../lib/api\";\n\nconst Home = props => {\n  const {\n    articles,\n    categories,\n    homepage,\n    games\n  } = props,\n        rest = _objectWithoutProperties(props, [\"articles\", \"categories\", \"homepage\", \"games\"]);\n\n  const {\n    d1,\n    d3\n  } = groupBy(games, \"division\");\n  console.log({\n    d1,\n    d3\n  });\n  const buttons = [{\n    display: \"Shop\",\n    link: \"/shop\"\n  }, {\n    display: \"Contact\",\n    link: \"/contact\"\n  }];\n  return __jsx(Layout, {\n    categories: categories,\n    seo: homepage.seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Seo, {\n    seo: homepage.seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(Hero, {\n    text: \"St. Louis Bombers Rugby Club\",\n    image: \"images/mcb-hero.jpeg\",\n    buttons: buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(SimpleGrid, {\n    m: \"0\",\n    p: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Games, {\n    games: games,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), __jsx(SimpleGrid, {\n    spacing: 8,\n    m: \"0\",\n    py: \"8\",\n    columns: [2, null, 3],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Articles, {\n    articles: articles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), \"other\")));\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [articles, categories, homepage, games, players, coaches] = await Promise.all([fetchAPI(\"/articles?status=published\"), fetchAPI(\"/categories\"), fetchAPI(\"/homepage\"), fetchAPI(\"/games\"), fetchAPI(\"/players\"), fetchAPI(\"/coaches\")]);\n  return {\n    props: {\n      articles,\n      categories,\n      homepage,\n      games,\n      players,\n      coaches\n    },\n    revalidate: 1\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/pages/index.js"],"names":["SimpleGrid","Tab","TabList","TabPanel","TabPanels","Tabs","groupBy","React","Hero","Layout","Seo","Articles","Games","fetchAPI","Home","props","articles","categories","homepage","games","rest","d1","d3","console","log","buttons","display","link","seo","getStaticProps","players","coaches","Promise","all","revalidate"],"mappings":"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","sourcesContent":["import { SimpleGrid } from \"@chakra-ui/layout\";\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from \"@chakra-ui/react\";\nimport { groupBy } from \"lodash\";\nimport React from \"react\";\nimport Hero from \"../common/Hero\";\nimport Layout from \"../common/Layout\";\nimport Seo from \"../common/Seo\";\nimport Articles from \"../components/Articles/articles\";\nimport Games from \"../components/Games\";\nimport { fetchAPI } from \"../lib/api\";\n\nconst Home = (props) => {\n  const { articles, categories, homepage, games, ...rest } = props;\n  const { d1, d3 } = groupBy(games, \"division\");\n  console.log({ d1, d3 });\n\n  const buttons = [\n    {\n      display: \"Shop\",\n      link: \"/shop\",\n    },\n    {\n      display: \"Contact\",\n      link: \"/contact\",\n    },\n  ];\n\n  return (\n    <Layout categories={categories} seo={homepage.seo}>\n      <Seo seo={homepage.seo} />\n      <Hero\n        text=\"St. Louis Bombers Rugby Club\"\n        image=\"images/mcb-hero.jpeg\"\n        buttons={buttons}\n      />\n      <SimpleGrid m=\"0\" p=\"8\">\n        <Games games={games} />\n        <SimpleGrid spacing={8} m=\"0\" py=\"8\" columns={[2, null, 3]}>\n          <Articles articles={articles} />\n          other\n        </SimpleGrid>\n      </SimpleGrid>\n    </Layout>\n  );\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [\n    articles,\n    categories,\n    homepage,\n    games,\n    players,\n    coaches,\n  ] = await Promise.all([\n    fetchAPI(\"/articles?status=published\"),\n    fetchAPI(\"/categories\"),\n    fetchAPI(\"/homepage\"),\n    fetchAPI(\"/games\"),\n    fetchAPI(\"/players\"),\n    fetchAPI(\"/coaches\"),\n  ]);\n\n  return {\n    props: { articles, categories, homepage, games, players, coaches },\n    revalidate: 1,\n  };\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}