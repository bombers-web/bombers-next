{"ast":null,"code":"var _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/components/Games/GameCard.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Badge, Box, Text, SimpleGrid, Flex, Grid, Heading, Stack } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox } from \"@chakra-ui/react\";\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/Image\";\nimport GameInfo from \"./GameInfo\";\n\nconst GameCard = ({\n  title,\n  link,\n  linkDisplay,\n  games = []\n}) => {\n  const styles = {\n    backgroundColor: \"#121212\",\n    // backgroundImage: \"linear-gradient(315deg, #7f8c8d 0%, #212121 50%)\",\n    boxShadow: \"0 1px 4px #151515\"\n  };\n  console.log({\n    games\n  }); // const {\n  //   date = \"\",\n  //   home = {},\n  //   away = {},\n  //   location = \"\",\n  //   home_score = null,\n  //   away_score = null,\n  // } = games;\n\n  return __jsx(Box, {\n    position: \"relative\",\n    top: \"-100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, games.map(({\n    home,\n    away,\n    location,\n    date,\n    home_score,\n    away_score,\n    division\n  }) => {\n    const gameInfo = {\n      homeTeam: _objectSpread(_objectSpread({}, home), {}, {\n        score: home_score\n      }),\n      awayTeam: _objectSpread(_objectSpread({}, away), {}, {\n        score: away_score\n      }),\n      location: location,\n      date: date\n    };\n    console.log({\n      gameInfo\n    });\n    return __jsx(Stack, {\n      direction: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(GameInfo, _extends({}, gameInfo, {\n      division: division,\n      preview: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    })));\n  })));\n};\n\nexport default GameCard;","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/components/Games/GameCard.js"],"names":["React","Badge","Box","Text","SimpleGrid","Flex","Grid","Heading","Stack","Button","Link","LinkBox","Card","Image","GameInfo","GameCard","title","link","linkDisplay","games","styles","backgroundColor","boxShadow","console","log","map","home","away","location","date","home_score","away_score","division","gameInfo","homeTeam","score","awayTeam"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,UAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,OAPF,EAQEC,KARF,QASO,mBATP;AAUA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,kBAAtC;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,KAAK,GAAG;AAApC,CAAD,KAA8C;AAC7D,QAAMC,MAAM,GAAG;AACbC,IAAAA,eAAe,EAAE,SADJ;AAEb;AACAC,IAAAA,SAAS,EAAE;AAHE,GAAf;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA;AAAF,GAAZ,EAN6D,CAQ7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,GAAG,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACM,GAAN,CACC,CAAC;AACCC,IAAAA,IADD;AAECC,IAAAA,IAFD;AAGCC,IAAAA,QAHD;AAICC,IAAAA,IAJD;AAKCC,IAAAA,UALD;AAMCC,IAAAA,UAND;AAOCC,IAAAA;AAPD,GAAD,KAQM;AACJ,UAAMC,QAAQ,GAAG;AACfC,MAAAA,QAAQ,kCAAOR,IAAP;AAAaS,QAAAA,KAAK,EAAEL;AAApB,QADO;AAEfM,MAAAA,QAAQ,kCAAOT,IAAP;AAAaQ,QAAAA,KAAK,EAAEJ;AAApB,QAFO;AAGfH,MAAAA,QAAQ,EAAEA,QAHK;AAIfC,MAAAA,IAAI,EAAEA;AAJS,KAAjB;AAOAN,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAES,MAAAA;AAAF,KAAZ;AACA,WACE,MAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD,eAAcA,QAAd;AAAwB,MAAA,QAAQ,EAAED,QAAlC;AAA4C,MAAA,OAAO,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAvBF,CADH,CADF,CADF;AA+BD,CAhDD;;AAkDA,eAAejB,QAAf","sourcesContent":["import React from \"react\";\nimport {\n  Badge,\n  Box,\n  Text,\n  SimpleGrid,\n  Flex,\n  Grid,\n  Heading,\n  Stack,\n} from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox } from \"@chakra-ui/react\";\n\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/Image\";\nimport GameInfo from \"./GameInfo\";\n\nconst GameCard = ({ title, link, linkDisplay, games = [] }) => {\n  const styles = {\n    backgroundColor: \"#121212\",\n    // backgroundImage: \"linear-gradient(315deg, #7f8c8d 0%, #212121 50%)\",\n    boxShadow: \"0 1px 4px #151515\",\n  };\n  console.log({ games });\n\n  // const {\n  //   date = \"\",\n  //   home = {},\n  //   away = {},\n  //   location = \"\",\n  //   home_score = null,\n  //   away_score = null,\n  // } = games;\n\n  return (\n    <Box position=\"relative\" top=\"-100px\">\n      <Card styles={styles}>\n        {games.map(\n          ({\n            home,\n            away,\n            location,\n            date,\n            home_score,\n            away_score,\n            division,\n          }) => {\n            const gameInfo = {\n              homeTeam: { ...home, score: home_score },\n              awayTeam: { ...away, score: away_score },\n              location: location,\n              date: date,\n            };\n\n            console.log({ gameInfo });\n            return (\n              <Stack direction=\"row\">\n                <GameInfo {...gameInfo} division={division} preview></GameInfo>\n              </Stack>\n            );\n          }\n        )}\n      </Card>\n    </Box>\n  );\n};\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}