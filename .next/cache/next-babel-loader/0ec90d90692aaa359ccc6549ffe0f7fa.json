{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/components/GameCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Badge, Box, Text, SimpleGrid, Flex } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox } from \"@chakra-ui/react\"; // import Link from \"next/link\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Card from \"../common/Card\";\nimport Image from \"../common/image\";\n\nvar GameCard = function GameCard(_ref) {\n  _s();\n\n  var games = _ref.games;\n\n  var _useState = useState(games.filter(function (game) {\n    return !game.result;\n  })),\n      upcoming = _useState[0],\n      setUpcoming = _useState[1];\n\n  var _useState2 = useState(games.filter(function (game) {\n    return game.result;\n  })),\n      played = _useState2[0],\n      setPlayed = _useState2[1];\n\n  console.log({\n    played: played,\n    upcoming: upcoming\n  });\n  return __jsx(React.Fragment, null, __jsx(SimpleGrid, {\n    spacing: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Flex, {\n    direction: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    direction: \"row\",\n    alignContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    color: \"gray.100\",\n    fontSize: \"3xl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Next Game\"), __jsx(Link, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    as: \"a\",\n    variant: \"rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"Schedule\"))), \"grow=\\\"1\\\"\", __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Next\"))), __jsx(SimpleGrid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    direction: \"row\",\n    alignContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(Text, {\n    color: \"gray.100\",\n    fontSize: \"3xl\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Last Game\"), __jsx(Link, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    as: \"a\",\n    variant: \"rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Results\"))), __jsx(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Last\"))));\n};\n\n_s(GameCard, \"Idgqd4SHpncEP9FJmUOJ+tPtCrQ=\");\n\n_c = GameCard;\nexport default GameCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCard\");","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/components/GameCard.js"],"names":["Badge","Box","Text","SimpleGrid","Flex","Button","Link","LinkBox","React","useState","useEffect","ReactMarkdown","Card","Image","GameCard","games","filter","game","result","upcoming","setUpcoming","played","setPlayed","console","log"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,UAA3B,EAAuCC,IAAvC,QAAmD,mBAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,kBAAtC,C,CAEA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC9B,kBAAgCN,QAAQ,CACtCM,KAAK,CAACC,MAAN,CAAa,UAACC,IAAD;AAAA,WAAU,CAACA,IAAI,CAACC,MAAhB;AAAA,GAAb,CADsC,CAAxC;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,mBAA4BX,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAa,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,MAAf;AAAA,GAAb,CAAD,CAApC;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA,MAAM,EAANA,MAAF;AAAUF,IAAAA,QAAQ,EAARA;AAAV,GAAZ;AAEA,SACE,4BACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,cAAc,EAAC,eADjB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,YAAY,EAAC,QAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAQE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,OAAO,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CARF,CADF,gBAgBE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAhBF,CADF,EAqBE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,cAAc,EAAC,eADjB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,YAAY,EAAC,QAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,UAAZ;AAAuB,IAAA,QAAQ,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAQE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,GAAX;AAAe,IAAA,OAAO,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CARF,CADF,EAeE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,CArBF,CADF,CADF;AA2CD,CAnDD;;GAAML,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import { Badge, Box, Text, SimpleGrid, Flex } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox } from \"@chakra-ui/react\";\n\n// import Link from \"next/link\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Card from \"../common/Card\";\nimport Image from \"../common/image\";\n\nconst GameCard = ({ games }) => {\n  const [upcoming, setUpcoming] = useState(\n    games.filter((game) => !game.result)\n  );\n  const [played, setPlayed] = useState(games.filter((game) => game.result));\n\n  console.log({ played, upcoming });\n\n  return (\n    <>\n      <SimpleGrid spacing=\"8\">\n        <Flex direction=\"column\">\n          <Flex\n            justifyContent=\"space-between\"\n            direction=\"row\"\n            alignContent=\"center\"\n          >\n            <Text color=\"gray.100\" fontSize=\"3xl\">\n              Next Game\n            </Text>\n            <Link>\n              <Button as=\"a\" variant=\"rounded\">\n                Schedule\n              </Button>\n            </Link>\n          </Flex>\n          grow=\"1\"\n          <Flex>\n            <Card>Next</Card>\n          </Flex>\n        </Flex>\n        <SimpleGrid>\n          <Flex\n            justifyContent=\"space-between\"\n            direction=\"row\"\n            alignContent=\"center\"\n          >\n            <Text color=\"gray.100\" fontSize=\"3xl\">\n              Last Game\n            </Text>\n            <Link>\n              <Button as=\"a\" variant=\"rounded\">\n                Results\n              </Button>\n            </Link>\n          </Flex>\n          <Card>Last</Card>\n        </SimpleGrid>\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}