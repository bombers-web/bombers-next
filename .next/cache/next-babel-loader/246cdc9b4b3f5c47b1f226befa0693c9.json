{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/components/Games/GameCard.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { Badge, Box, Text, SimpleGrid, Flex, Grid, Heading, Stack, Divider } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox, SkeletonText } from \"@chakra-ui/react\";\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/Image\";\nimport GameInfo from \"./GameInfo\";\n\nvar GameCard = function GameCard(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? \"\" : _ref$title,\n      _ref$link = _ref.link,\n      link = _ref$link === void 0 ? \"\" : _ref$link,\n      _ref$linkDisplay = _ref.linkDisplay,\n      linkDisplay = _ref$linkDisplay === void 0 ? \"\" : _ref$linkDisplay,\n      _ref$games = _ref.games,\n      games = _ref$games === void 0 ? [] : _ref$games;\n  var styles = {\n    backgroundColor: \"#121212\",\n    // backgroundImage:\n    //   \"linear-gradient(to right bottom, #212121 50%, #7f8c8d 50.3%)\",\n    boxShadow: \"0 1px 4px #151515\"\n  };\n  console.log({\n    games: games\n  });\n  return __jsx(Box, {\n    position: \"relative\",\n    top: \"-100px\",\n    m: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    styles: styles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(SkeletonText, {\n    w: \"80%\",\n    m: \"auto\",\n    startColor: \"brand.medium\",\n    endColor: \"brand.dark\",\n    isLoaded: games.length,\n    fadeDuration: 0.6,\n    speed: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    direction: \"row\" // m=\"auto\"\n    ,\n    p: \"8\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, games.map(function (_ref2) {\n    var home = _ref2.home,\n        away = _ref2.away,\n        location = _ref2.location,\n        date = _ref2.date,\n        home_score = _ref2.home_score,\n        away_score = _ref2.away_score,\n        division = _ref2.division,\n        slug = _ref2.slug;\n    var gameInfo = {\n      homeTeam: _objectSpread(_objectSpread({}, home), {}, {\n        score: home_score\n      }),\n      awayTeam: _objectSpread(_objectSpread({}, away), {}, {\n        score: away_score\n      }),\n      location: location,\n      date: date\n    };\n    return __jsx(React.Fragment, null, __jsx(GameInfo, _extends({\n      key: slug || \"\".concat(home.name, \"-vs-\").concat(away.name)\n    }, gameInfo, {\n      division: division,\n      preview: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    })), __jsx(Center, {\n      height: \"50px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, __jsx(Divider, {\n      orientation: \"vertical\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }\n    })));\n  })))));\n};\n\n_c = GameCard;\nexport default GameCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCard\");","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/components/Games/GameCard.js"],"names":["React","Badge","Box","Text","SimpleGrid","Flex","Grid","Heading","Stack","Divider","Button","Link","LinkBox","SkeletonText","Card","Image","GameInfo","GameCard","title","link","linkDisplay","games","styles","backgroundColor","boxShadow","console","log","length","map","home","away","location","date","home_score","away_score","division","slug","gameInfo","homeTeam","score","awayTeam","name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Badge,\n  Box,\n  Text,\n  SimpleGrid,\n  Flex,\n  Grid,\n  Heading,\n  Stack,\n  Divider,\n} from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox, SkeletonText } from \"@chakra-ui/react\";\n\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/Image\";\nimport GameInfo from \"./GameInfo\";\n\nconst GameCard = ({ title = \"\", link = \"\", linkDisplay = \"\", games = [] }) => {\n  const styles = {\n    backgroundColor: \"#121212\",\n    // backgroundImage:\n    //   \"linear-gradient(to right bottom, #212121 50%, #7f8c8d 50.3%)\",\n    boxShadow: \"0 1px 4px #151515\",\n  };\n  console.log({ games });\n\n  return (\n    <Box position=\"relative\" top=\"-100px\" m=\"auto\">\n      <Card styles={styles}>\n        <SkeletonText\n          w=\"80%\"\n          m=\"auto\"\n          startColor=\"brand.medium\"\n          endColor=\"brand.dark\"\n          isLoaded={games.length}\n          fadeDuration={0.6}\n          speed={1}\n        >\n          <Stack\n            direction=\"row\"\n            // m=\"auto\"\n            p=\"8\"\n            justifyContent=\"space-around\"\n            alignItems=\"center\"\n          >\n            {games.map(\n              ({\n                home,\n                away,\n                location,\n                date,\n                home_score,\n                away_score,\n                division,\n                slug,\n              }) => {\n                const gameInfo = {\n                  homeTeam: { ...home, score: home_score },\n                  awayTeam: { ...away, score: away_score },\n                  location: location,\n                  date: date,\n                };\n\n                return (\n                  <>\n                    <GameInfo\n                      key={slug || `${home.name}-vs-${away.name}`}\n                      {...gameInfo}\n                      division={division}\n                      preview\n                    ></GameInfo>\n                    <Center height=\"50px\">\n                      <Divider orientation=\"vertical\" />\n                    </Center>\n                  </>\n                );\n              }\n            )}\n          </Stack>\n        </SkeletonText>\n      </Card>\n    </Box>\n  );\n};\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}