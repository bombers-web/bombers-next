{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/components/Games/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Badge, Box, Text, SimpleGrid, Flex } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox } from \"@chakra-ui/react\"; // import Link from \"next/link\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/image\";\n\nvar Games = function Games(_ref) {\n  _s();\n\n  var games = _ref.games;\n  console.log({\n    games: games\n  });\n\n  var _useState = useState(games.filter(function (game) {\n    return !game.result;\n  })),\n      upcoming = _useState[0],\n      setUpcoming = _useState[1];\n\n  var _useState2 = useState(games.filter(function (game) {\n    return game.result;\n  })),\n      played = _useState2[0],\n      setPlayed = _useState2[1];\n\n  console.log({\n    played: played,\n    upcoming: upcoming\n  });\n  return __jsx(React.Fragment, null, __jsx(SimpleGrid, {\n    spacing: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(GameCard, {\n    game: {},\n    title: \"Next Game\",\n    link: \"/schedule\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(GameCard, {\n    game: {},\n    title: \"Last Game\",\n    link: \"/result\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Games, \"Idgqd4SHpncEP9FJmUOJ+tPtCrQ=\");\n\n_c = Games;\nexport default GameCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/components/Games/index.js"],"names":["Badge","Box","Text","SimpleGrid","Flex","Button","Link","LinkBox","React","useState","useEffect","ReactMarkdown","Card","Image","Games","games","console","log","filter","game","result","upcoming","setUpcoming","played","setPlayed","GameCard"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,UAA3B,EAAuCC,IAAvC,QAAmD,mBAAnD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,kBAAtC,C,CAEA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA,KAAK,EAALA;AAAF,GAAZ;;AACA,kBAAgCN,QAAQ,CACtCM,KAAK,CAACG,MAAN,CAAa,UAACC,IAAD;AAAA,WAAU,CAACA,IAAI,CAACC,MAAhB;AAAA,GAAb,CADsC,CAAxC;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,mBAA4Bb,QAAQ,CAACM,KAAK,CAACG,MAAN,CAAa,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,MAAf;AAAA,GAAb,CAAD,CAApC;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AAEAR,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEM,IAAAA,MAAM,EAANA,MAAF;AAAUF,IAAAA,QAAQ,EAARA;AAAV,GAAZ;AAEA,SACE,4BACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAE,EAAhB;AAAoB,IAAA,KAAK,EAAC,WAA1B;AAAsC,IAAA,IAAI,EAAC,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAE,EAAhB;AAAoB,IAAA,KAAK,EAAC,WAA1B;AAAsC,IAAA,IAAI,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAjBD;;GAAMP,K;;KAAAA,K;AAmBN,eAAeW,QAAf","sourcesContent":["import { Badge, Box, Text, SimpleGrid, Flex } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox } from \"@chakra-ui/react\";\n\n// import Link from \"next/link\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/image\";\n\nconst Games = ({ games }) => {\n  console.log({ games });\n  const [upcoming, setUpcoming] = useState(\n    games.filter((game) => !game.result)\n  );\n  const [played, setPlayed] = useState(games.filter((game) => game.result));\n\n  console.log({ played, upcoming });\n\n  return (\n    <>\n      <SimpleGrid spacing=\"8\">\n        <GameCard game={{}} title=\"Next Game\" link=\"/schedule\" />\n        <GameCard game={{}} title=\"Last Game\" link=\"/result\" />\n      </SimpleGrid>\n    </>\n  );\n};\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}