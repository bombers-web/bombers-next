{"ast":null,"code":"var _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/pages/article/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../common/image\";\nimport Seo from \"../../components/seo\";\nimport { getStrapiMedia } from \"../../lib/media\";\nimport gfm from \"remark-gfm\";\nimport styled from \"styled-components\";\nimport { Box, Divider, Flex, Text } from \"@chakra-ui/layout\";\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\nconst ArticleHeader = styled.div`\n  font-size: 44px;\n  color: white;\n  font-weight: 600;\n  background: linear-gradient(\n    90deg,\n    rgba(24, 24, 24, 1) 0%,\n    rgba(33, 33, 33, 1) 35%,\n    rgba(48, 48, 48, 1) 100%\n  );\n  padding: 16px;\n  border: 4px solid white;\n  width: 100%;\n  text-align: center;\n`;\n\nconst Article = ({\n  article,\n  categories\n}) => {\n  const imageUrl = getStrapiMedia(article.image);\n  const seo = {\n    metaTitle: article.title,\n    metaDescription: article.description,\n    shareImage: article.image,\n    article: true\n  };\n  const textVariants = useBreakpointValue({\n    base: \"2xl\",\n    xs: \"4xl\",\n    s: \"4xl\",\n    md: \"5xl\",\n    lg: \"5xl\",\n    xl: \"6xl\"\n  });\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(Seo, {\n    seo: seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), __jsx(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n    id: \"banner\",\n    h: \"md\",\n    className: \"uk-background-cover\",\n    \"data-src\": imageUrl,\n    \"data-srcset\": imageUrl,\n    \"data-uk-img\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    w: \"75%\",\n    p: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(Text, {\n    color: \"brand.400\",\n    as: \"h1\",\n    fontSize: \"4.5rem\",\n    fontWeight: \"bolder\",\n    textTransform: \"uppercase\",\n    textAlign: \"start\",\n    m: \"8\",\n    sx: {\n      \"-webkit-backface-visibility\": \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, article.title))), __jsx(Flex, {\n    py: \"70px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    w: \"75%\",\n    m: \"auto\",\n    p: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, __jsx(Flex, {\n    className: \"uk-grid-small uk-flex-left\",\n    \"data-uk-grid\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, article.author.picture && __jsx(Image, {\n    image: article.author.picture,\n    style: {\n      position: \"static\",\n      borderRadius: \"50%\",\n      height: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), __jsx(Box, {\n    className: \"uk-width-expand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"uk-margin-remove-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, \"By \", article.author.name), __jsx(\"p\", {\n    className: \"uk-text-meta uk-margin-remove-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, __jsx(Moment, {\n    format: \"MMM Do YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, article.published_at)))), __jsx(Divider, {\n    size: \"2px\",\n    variant: \"solid\",\n    m: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(ReactMarkdown, {\n    source: article.content,\n    escapeHtml: false,\n    remarkPlugins: [gfm],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), __jsx(\"hr\", {\n    className: \"uk-divider-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport async function getStaticPaths() {\n  const articles = await fetchAPI(\"/articles\");\n  return {\n    paths: articles.map(article => ({\n      params: {\n        slug: article.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const articles = await fetchAPI(`/articles?slug=${params.slug}&status=published`);\n  const categories = await fetchAPI(\"/categories\");\n  return {\n    props: {\n      article: articles[0],\n      categories\n    },\n    revalidate: 1\n  };\n}\nexport default Article;","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/pages/article/[slug].js"],"names":["ReactMarkdown","Moment","fetchAPI","Layout","Image","Seo","getStrapiMedia","gfm","styled","Box","Divider","Flex","Text","useBreakpointValue","ArticleHeader","div","Article","article","categories","imageUrl","image","seo","metaTitle","title","metaDescription","description","shareImage","textVariants","base","xs","s","md","lg","xl","author","picture","position","borderRadius","height","name","published_at","content","getStaticPaths","articles","paths","map","params","slug","fallback","getStaticProps","props","revalidate"],"mappings":"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","sourcesContent":["import ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../common/image\";\nimport Seo from \"../../components/seo\";\nimport { getStrapiMedia } from \"../../lib/media\";\nimport gfm from \"remark-gfm\";\nimport styled from \"styled-components\";\nimport { Box, Divider, Flex, Text } from \"@chakra-ui/layout\";\nimport { useBreakpointValue } from \"@chakra-ui/media-query\";\n\nconst ArticleHeader = styled.div`\n  font-size: 44px;\n  color: white;\n  font-weight: 600;\n  background: linear-gradient(\n    90deg,\n    rgba(24, 24, 24, 1) 0%,\n    rgba(33, 33, 33, 1) 35%,\n    rgba(48, 48, 48, 1) 100%\n  );\n  padding: 16px;\n  border: 4px solid white;\n  width: 100%;\n  text-align: center;\n`;\n\nconst Article = ({ article, categories }) => {\n  const imageUrl = getStrapiMedia(article.image);\n\n  const seo = {\n    metaTitle: article.title,\n    metaDescription: article.description,\n    shareImage: article.image,\n    article: true,\n  };\n\n  const textVariants = useBreakpointValue({\n    base: \"2xl\",\n    xs: \"4xl\",\n    s: \"4xl\",\n    md: \"5xl\",\n    lg: \"5xl\",\n    xl: \"6xl\",\n  });\n\n  return (\n    <Layout categories={categories}>\n      <Seo seo={seo} />\n\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"flex-end\"\n        id=\"banner\"\n        h=\"md\"\n        className=\"uk-background-cover\"\n        data-src={imageUrl}\n        data-srcset={imageUrl}\n        data-uk-img\n      >\n        <Box w=\"75%\" p=\"8\">\n          <Text\n            color=\"brand.400\"\n            as=\"h1\"\n            fontSize=\"4.5rem\"\n            fontWeight=\"bolder\"\n            textTransform=\"uppercase\"\n            textAlign=\"start\"\n            m=\"8\"\n            sx={{\n              \"-webkit-backface-visibility\": \"hidden\",\n            }}\n          >\n            {article.title}\n          </Text>\n        </Box>\n      </Flex>\n      <Flex py=\"70px\">\n        <Box w=\"75%\" m=\"auto\" p=\"4\">\n          <Flex className=\"uk-grid-small uk-flex-left\" data-uk-grid=\"true\">\n            <Box>\n              {article.author.picture && (\n                <Image\n                  image={article.author.picture}\n                  style={{\n                    position: \"static\",\n                    borderRadius: \"50%\",\n                    height: 30,\n                  }}\n                />\n              )}\n            </Box>\n            <Box className=\"uk-width-expand\">\n              <p className=\"uk-margin-remove-bottom\">\n                By {article.author.name}\n              </p>\n              <p className=\"uk-text-meta uk-margin-remove-top\">\n                <Moment format=\"MMM Do YYYY\">{article.published_at}</Moment>\n              </p>\n            </Box>\n          </Flex>\n          <Divider size=\"2px\" variant=\"solid\" m=\"8\"></Divider>\n\n          <Box>\n            <ReactMarkdown\n              source={article.content}\n              escapeHtml={false}\n              remarkPlugins={[gfm]}\n            />\n          </Box>\n          <hr className=\"uk-divider-small\" />\n        </Box>\n      </Flex>\n    </Layout>\n  );\n};\n\nexport async function getStaticPaths() {\n  const articles = await fetchAPI(\"/articles\");\n\n  return {\n    paths: articles.map((article) => ({\n      params: {\n        slug: article.slug,\n      },\n    })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps({ params }) {\n  const articles = await fetchAPI(\n    `/articles?slug=${params.slug}&status=published`\n  );\n  const categories = await fetchAPI(\"/categories\");\n\n  return {\n    props: { article: articles[0], categories },\n    revalidate: 1,\n  };\n}\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}