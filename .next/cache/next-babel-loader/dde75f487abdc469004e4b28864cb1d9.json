{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject;\n\nvar __jsx = React.createElement;\nimport { Box, Button, Flex, Link, LinkBox, Stack, Text, useBreakpointValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar heightSizes = {\n  sm: \"20vh\",\n  md: \"40vh\",\n  lg: \"70vh\"\n};\nvar Diagonal = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  padding: 5%;\\n  min-height: \", \";\\n  background-repeat: no-repeat;\\n  background-position: right;\\n  background-size: cover;\\n  background-image: \", \";\\n\"])), function (props) {\n  return heightSizes[props.size] || \"70vh\";\n}, function (props) {\n  return \"linear-gradient(\\n      120deg,\\n      #000 40%,\\n      #00000060 40%,\\n      #00000060 50%,\\n      transparent 50%,\\n      transparent\\n    ),\\n    url(\".concat(props.image, \");\");\n});\n\nvar Hero = function Hero(_ref) {\n  var text = _ref.text,\n      _ref$buttons = _ref.buttons,\n      buttons = _ref$buttons === void 0 ? [] : _ref$buttons,\n      image = _ref.image,\n      size = _ref.size;\n  return __jsx(Diagonal, {\n    image: image,\n    size: size\n  }, __jsx(Flex, {\n    direction: \"row\",\n    align: \"center\",\n    justify: \"space-evenly\",\n    width: [\"50%\", \"100%\", \"100%\", \"50%\"]\n  }, __jsx(Box, null, __jsx(Text, {\n    fontSize: \"5xl\",\n    casing: \"uppercase\",\n    as: \"b\",\n    color: \"white\",\n    style: {\n      marginBottom: 12\n    }\n  }, text), __jsx(Stack, {\n    spacing: 4,\n    direction: \"row\",\n    align: \"center\",\n    marginTop: 8\n  }, buttons && (buttons === null || buttons === void 0 ? void 0 : buttons.map(function (_ref2) {\n    var link = _ref2.link,\n        display = _ref2.display,\n        color = _ref2.color;\n    return __jsx(LinkBox, {\n      key: \"link_\".concat(link)\n    }, __jsx(Link, {\n      _hover: {\n        textDecoration: \"none\"\n      }\n    }, __jsx(Button, {\n      colorScheme: \"gray\",\n      size: \"md\",\n      color: color || \"brand.light\",\n      href: link || \"\",\n      textDecoration: \"none\",\n      _hover: {\n        backgroundColor: \"#e2e2e2\",\n        color: \"#212121\"\n      }\n    }, display)));\n  }))))), __jsx(Box, {\n    flex: \"1\",\n    color: \"transparent\"\n  }, \"o\"));\n};\n\nexport default Hero;","map":null,"metadata":{},"sourceType":"module"}