{"ast":null,"code":"var __jsx = React.createElement;\nimport { Box, Flex, SimpleGrid } from \"@chakra-ui/layout\";\nimport { Text, Heading } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Card from \"../../common/Card\";\n\nconst PlayerList = ({\n  list = [],\n  staff\n}) => {\n  const forwards = list === null || list === void 0 ? void 0 : list.filter(player => player.position > 0 && player.position <= 8);\n  const backs = list === null || list === void 0 ? void 0 : list.filter(player => player.position >= 9);\n\n  const getPosition = position => {\n    return {\n      1: \"Loose Head Prop\",\n      2: \"Hooker\",\n      3: \"Tight Head Prop\",\n      4: \"Lock\",\n      5: \"Lock\",\n      6: \"Flanker\",\n      7: \"Flanker\",\n      8: \"8\",\n      9: \"Scrum-half\",\n      10: \"Fly-half\",\n      11: \"Wing\",\n      12: \"Inside Center\",\n      13: \"Outside Center\",\n      14: \"Wing\",\n      15: \"Fullback\"\n    }[position];\n  };\n\n  const List = ({\n    players\n  }) => {\n    return __jsx(Flex, {\n      overflowX: \"scroll\",\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      whiteSpace: \"nowrap\"\n      /* added width so it would work in the snippet */\n\n    }, players.map(player => {\n      const image = {\n        name: player.picture.name || \"\",\n        alternativeText: `${player.first_name}-pro-pic`,\n        url: player.picture.url || \"\"\n      };\n      const style = {\n        backgroundImage: `url(${process.env.strapi}${player.picture.url})`\n      };\n      return __jsx(Card, {\n        key: `${player.first_name}-card`,\n        id: \"player-card\",\n        link: `/team/${player.id}`,\n        styles: {\n          minHeight: \"370px\",\n          height: \"auto\",\n          minWidth: \"270px\",\n          maxWidth: \"270px\"\n        },\n        image: image,\n        imageProps: {\n          h: \"100%\"\n        }\n      }, __jsx(Flex, {\n        id: \"text-content\",\n        display: \"flex\",\n        bg: \"brand.800\",\n        p: \"4\",\n        alignContent: \"end\",\n        direction: \"column\",\n        justifyContent: \"center\",\n        w: \"100%\",\n        h: \"fit-content\",\n        alignSelf: \"flex-end\"\n      }, __jsx(Text, {\n        color: \"brand.400\",\n        textAlign: \"center\",\n        fontWeight: \"bold\",\n        textTransform: \"capitalize\",\n        wordSpacing: \"6px\"\n      }, player.first_name, \" \", player.last_name), __jsx(Text, {\n        color: \"brand.400\",\n        textAlign: \"center\",\n        fontWeight: \"medium\",\n        textTransform: \"capitalize\"\n      }, staff ? player.position : getPosition(player.position))));\n    }));\n  };\n\n  return __jsx(Flex, {\n    direction: \"column\"\n  }, !staff ? __jsx(React.Fragment, null, __jsx(Heading, {\n    as: \"h2\",\n    size: \"xl\",\n    isTruncated: true\n  }, \"Forwards\"), __jsx(List, {\n    players: forwards\n  }), __jsx(Heading, {\n    as: \"h2\",\n    size: \"xl\",\n    isTruncated: true\n  }, \"Backs\"), __jsx(List, {\n    players: backs\n  })) : __jsx(React.Fragment, null, __jsx(Heading, {\n    as: \"h2\",\n    size: \"xl\",\n    isTruncated: true\n  }, \"Staff\"), __jsx(List, {\n    players: list\n  })));\n};\n\nexport default PlayerList;","map":null,"metadata":{},"sourceType":"module"}