{"ast":null,"code":"var _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/components/Games/GameCard.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Badge, Box, Text, SimpleGrid, Flex, Grid } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox } from \"@chakra-ui/react\";\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/Image\";\nimport GameInfo from \"./GameInfo\";\n\nconst GameCard = ({\n  title,\n  link,\n  linkDisplay,\n  game = []\n}) => {\n  const styles = {\n    backgroundColor: \"#7f8c8d\",\n    backgroundImage: \"linear-gradient(315deg, #7f8c8d 0%, #212121 50%)\"\n  };\n  const {\n    date = \"\",\n    home = {},\n    away = {},\n    location = \"\",\n    home_score = null,\n    away_score = null\n  } = game;\n  const gameInfo = {\n    homeTeam: _objectSpread(_objectSpread({}, home), {}, {\n      score: home_score\n    }),\n    awayTeam: _objectSpread(_objectSpread({}, away), {}, {\n      score: away_score\n    }),\n    location: location,\n    date: date\n  };\n  return __jsx(Box, {\n    position: \"relative\",\n    top: \"-100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    styles: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(GameInfo, _extends({}, gameInfo, {\n    preview: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default GameCard;","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/components/Games/GameCard.js"],"names":["React","Badge","Box","Text","SimpleGrid","Flex","Grid","Button","Link","LinkBox","Card","Image","GameInfo","GameCard","title","link","linkDisplay","game","styles","backgroundColor","backgroundImage","date","home","away","location","home_score","away_score","gameInfo","homeTeam","score","awayTeam"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,UAA3B,EAAuCC,IAAvC,EAA6CC,IAA7C,QAAyD,mBAAzD;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,kBAAtC;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,IAAI,GAAG;AAAnC,CAAD,KAA6C;AAC5D,QAAMC,MAAM,GAAG;AACbC,IAAAA,eAAe,EAAE,SADJ;AAEbC,IAAAA,eAAe,EAAE;AAFJ,GAAf;AAKA,QAAM;AACJC,IAAAA,IAAI,GAAG,EADH;AAEJC,IAAAA,IAAI,GAAG,EAFH;AAGJC,IAAAA,IAAI,GAAG,EAHH;AAIJC,IAAAA,QAAQ,GAAG,EAJP;AAKJC,IAAAA,UAAU,GAAG,IALT;AAMJC,IAAAA,UAAU,GAAG;AANT,MAOFT,IAPJ;AASA,QAAMU,QAAQ,GAAG;AACfC,IAAAA,QAAQ,kCAAON,IAAP;AAAaO,MAAAA,KAAK,EAAEJ;AAApB,MADO;AAEfK,IAAAA,QAAQ,kCAAOP,IAAP;AAAaM,MAAAA,KAAK,EAAEH;AAApB,MAFO;AAGfF,IAAAA,QAAQ,EAAEA,QAHK;AAIfH,IAAAA,IAAI,EAAEA;AAJS,GAAjB;AAOA,SACE,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,GAAG,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEH,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,eAAcS,QAAd;AAAwB,IAAA,OAAO,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF;AAOD,CA7BD;;AA+BA,eAAed,QAAf","sourcesContent":["import React from \"react\";\nimport { Badge, Box, Text, SimpleGrid, Flex, Grid } from \"@chakra-ui/layout\";\nimport { Button, Link, LinkBox } from \"@chakra-ui/react\";\n\nimport Card from \"../../common/Card\";\nimport Image from \"../../common/Image\";\nimport GameInfo from \"./GameInfo\";\n\nconst GameCard = ({ title, link, linkDisplay, game = [] }) => {\n  const styles = {\n    backgroundColor: \"#7f8c8d\",\n    backgroundImage: \"linear-gradient(315deg, #7f8c8d 0%, #212121 50%)\",\n  };\n\n  const {\n    date = \"\",\n    home = {},\n    away = {},\n    location = \"\",\n    home_score = null,\n    away_score = null,\n  } = game;\n\n  const gameInfo = {\n    homeTeam: { ...home, score: home_score },\n    awayTeam: { ...away, score: away_score },\n    location: location,\n    date: date,\n  };\n\n  return (\n    <Box position=\"relative\" top=\"-100px\">\n      <Card styles={styles}>\n        <GameInfo {...gameInfo} preview></GameInfo>\n      </Card>\n    </Box>\n  );\n};\n\nexport default GameCard;\n"]},"metadata":{},"sourceType":"module"}