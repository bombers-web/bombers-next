{"ast":null,"code":"var _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/components/Games/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { SimpleGrid, Flex, Box, Grid, GridItem } from \"@chakra-ui/layout\"; // import Link from \"next/link\";\n\nimport React, { useState } from \"react\";\nimport GameCard from \"./GameCard\";\n\nconst Games = ({\n  games\n}) => {\n  const upcoming = games.filter(game => !game.finished);\n  const played = games.filter(game => game.finished);\n  const gameCards = [{\n    game: played[0],\n    title: \"Last Game\",\n    link: \"/schedule\",\n    linkDisplay: \"Results\"\n  }, {\n    game: upcoming[0],\n    title: \"Next Game\",\n    link: \"/schedule\",\n    linkDisplay: \"Schedule\"\n  }];\n  return __jsx(Grid, {\n    py: \"8\",\n    h: \"auto\",\n    templateRows: \"repeat(2, 1fr)\",\n    templateColumns: \"repeat(2, 1fr)\",\n    gap: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, gameCards.map(game => __jsx(GridItem, {\n    colSpan: [1, 2, 2, 1],\n    rowSpan: [2, 1, 1, 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(GameCard, _extends({}, game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })))));\n};\n\nexport default Games;","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/components/Games/index.js"],"names":["SimpleGrid","Flex","Box","Grid","GridItem","React","useState","GameCard","Games","games","upcoming","filter","game","finished","played","gameCards","title","link","linkDisplay","map"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsCC,QAAtC,QAAsD,mBAAtD,C,CACA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,QAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAU,CAACA,IAAI,CAACC,QAA7B,CAAjB;AACA,QAAMC,MAAM,GAAGL,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAA5B,CAAf;AAEA,QAAME,SAAS,GAAG,CAChB;AACEH,IAAAA,IAAI,EAAEE,MAAM,CAAC,CAAD,CADd;AAEEE,IAAAA,KAAK,EAAE,WAFT;AAGEC,IAAAA,IAAI,EAAE,WAHR;AAIEC,IAAAA,WAAW,EAAE;AAJf,GADgB,EAOhB;AACEN,IAAAA,IAAI,EAAEF,QAAQ,CAAC,CAAD,CADhB;AAEEM,IAAAA,KAAK,EAAE,WAFT;AAGEC,IAAAA,IAAI,EAAE,WAHR;AAIEC,IAAAA,WAAW,EAAE;AAJf,GAPgB,CAAlB;AAeA,SACE,MAAC,IAAD;AACE,IAAA,EAAE,EAAC,GADL;AAEE,IAAA,CAAC,EAAC,MAFJ;AAGE,IAAA,YAAY,EAAC,gBAHf;AAIE,IAAA,eAAe,EAAC,gBAJlB;AAKE,IAAA,GAAG,EAAE,CALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGH,SAAS,CAACI,GAAV,CAAeP,IAAD,IACb,MAAC,QAAD;AAAU,IAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAnB;AAAiC,IAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD,eAAcA,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADD,CAPH,CADF;AAeD,CAlCD;;AAoCA,eAAeJ,KAAf","sourcesContent":["import { SimpleGrid, Flex, Box, Grid, GridItem } from \"@chakra-ui/layout\";\n// import Link from \"next/link\";\nimport React, { useState } from \"react\";\nimport GameCard from \"./GameCard\";\n\nconst Games = ({ games }) => {\n  const upcoming = games.filter((game) => !game.finished);\n  const played = games.filter((game) => game.finished);\n\n  const gameCards = [\n    {\n      game: played[0],\n      title: \"Last Game\",\n      link: \"/schedule\",\n      linkDisplay: \"Results\",\n    },\n    {\n      game: upcoming[0],\n      title: \"Next Game\",\n      link: \"/schedule\",\n      linkDisplay: \"Schedule\",\n    },\n  ];\n\n  return (\n    <Grid\n      py=\"8\"\n      h=\"auto\"\n      templateRows=\"repeat(2, 1fr)\"\n      templateColumns=\"repeat(2, 1fr)\"\n      gap={4}\n    >\n      {gameCards.map((game) => (\n        <GridItem colSpan={[1, 2, 2, 1]} rowSpan={[2, 1, 1, 2]}>\n          <GameCard {...game} />\n        </GridItem>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Games;\n"]},"metadata":{},"sourceType":"module"}