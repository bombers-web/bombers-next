{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/elbgi/Desktop/bombers/frontend/components/articles.js\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ArticleCard from \"./ArticleCard\";\n\nvar Articles = function Articles(_ref) {\n  var articles = _ref.articles;\n  var leftArticlesCount = Math.ceil(articles.length / 5);\n  var leftArticles = articles.slice(0, leftArticlesCount);\n  var rightArticles = articles.slice(leftArticlesCount, articles.length);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"uk-child-width-1-2@s\",\n    \"data-uk-grid\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, leftArticles.map(function (article, i) {\n    return __jsx(ArticleCard, {\n      article: article,\n      key: \"article__left__\".concat(article.slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    });\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"uk-child-width-1-2@m uk-grid-match\",\n    \"data-uk-grid\": true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, rightArticles.map(function (article, i) {\n    return __jsx(GameCard, {\n      article: article,\n      key: \"article__left__\".concat(article.slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    });\n  })))));\n};\n\n_c = Articles;\nexport default Articles;\n\n__jsx(SimpleGrid, {\n  columns: \"2\",\n  spacing: 8,\n  m: \"0\",\n  p: \"8\",\n  gridTemplateColumns: \"repeat(1, 2fr 1fr)\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 1\n  }\n}, __jsx(SimpleGrid, {\n  direction: \"column\",\n  spacing: 2,\n  columnSpan: 3,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }\n}, __jsx(Flex, {\n  justifyContent: \"space-between\",\n  direction: \"row\",\n  alignContent: \"center\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}, __jsx(Text, {\n  color: \"gray.800\",\n  fontSize: \"3xl\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}, \"Latest Articles\"), __jsx(Link, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }\n}, __jsx(Button, {\n  as: \"a\",\n  variant: \"rounded\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }\n}, \"See all\"))), __jsx(ArticleCard, {\n  article: latestArticle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }\n}), \";\"), __jsx(SimpleGrid, {\n  columnSpan: 1,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n}, __jsx(Games, {\n  games: games,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }\n})));\n\nvar _c;\n\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"sources":["/Users/elbgi/Desktop/bombers/frontend/components/articles.js"],"names":["React","ArticleCard","Articles","articles","leftArticlesCount","Math","ceil","length","leftArticles","slice","rightArticles","map","article","i","slug","latestArticle","games"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ArticleCard from \"./ArticleCard\";\n\nconst Articles = ({ articles }) => {\n  const leftArticlesCount = Math.ceil(articles.length / 5);\n  const leftArticles = articles.slice(0, leftArticlesCount);\n  const rightArticles = articles.slice(leftArticlesCount, articles.length);\n\n  return (\n    <div>\n      <div className=\"uk-child-width-1-2@s\" data-uk-grid=\"true\">\n        <div>\n          {leftArticles.map((article, i) => {\n            return (\n              <ArticleCard\n                article={article}\n                key={`article__left__${article.slug}`}\n              />\n            );\n          })}\n        </div>\n        <div>\n          <div className=\"uk-child-width-1-2@m uk-grid-match\" data-uk-grid>\n            {rightArticles.map((article, i) => {\n              return (\n                <GameCard\n                  article={article}\n                  key={`article__left__${article.slug}`}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Articles;\n\n<SimpleGrid\n  columns=\"2\"\n  spacing={8}\n  m=\"0\"\n  p=\"8\"\n  gridTemplateColumns=\"repeat(1, 2fr 1fr)\"\n>\n  <SimpleGrid direction=\"column\" spacing={2} columnSpan={3}>\n    <Flex justifyContent=\"space-between\" direction=\"row\" alignContent=\"center\">\n      <Text color=\"gray.800\" fontSize=\"3xl\">\n        Latest Articles\n      </Text>\n      <Link>\n        <Button as=\"a\" variant=\"rounded\">\n          See all\n        </Button>\n      </Link>\n    </Flex>\n    <ArticleCard article={latestArticle}></ArticleCard>;\n  </SimpleGrid>\n  <SimpleGrid columnSpan={1}>\n    <Games games={games} />\n  </SimpleGrid>\n</SimpleGrid>;\n"]},"metadata":{},"sourceType":"module"}