{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport { createContext } from \"react\";\nimport { getStrapiMedia } from \"../lib/media\";\nimport { fetchAPI } from \"../lib/api\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\nimport theme from \"../theme\";\nimport \"@fortawesome/fontawesome-svg-core/styles.css\"; // Store Strapi Global object in context\n\nexport const GlobalContext = /*#__PURE__*/createContext({});\nconfig.autoAddCss = false;\n\nconst MyApp = _ref => {\n  let {\n    Component,\n    pageProps,\n    appProps\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"Component\", \"pageProps\", \"appProps\"]);\n\n  const {\n    global\n  } = pageProps;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://fonts.googleapis.com\"\n  }), __jsx(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://fonts.gstatic.com\",\n    crossorigin: true\n  }), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: getStrapiMedia(global.favicon)\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/css?family=Staatliches\"\n  }), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://cdn.jsdelivr.net/npm/uikit@3.2.3/dist/css/uikit.min.css\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Big+Shoulders+Display:wght@300;400;500;600;700;800;900&display=swap\",\n    rel: \"stylesheet\"\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.2.0/js/uikit.min.js\"\n  }), __jsx(\"script\", {\n    src: \"https://cdn.jsdelivr.net/npm/uikit@3.2.3/dist/js/uikit-icons.min.js\"\n  }), __jsx(\"script\", {\n    src: \"https://cdnjs.cloudflare.com/ajax/libs/uikit/3.2.0/js/uikit.js\"\n  })), __jsx(GlobalContext.Provider, {\n    value: global\n  }, __jsx(ChakraProvider, {\n    theme: theme\n  }, __jsx(Component, pageProps))));\n}; // getInitialProps disables automatic static optimization for pages that don't\n// have getStaticProps. So article, category and home pages still get SSG.\n// Hopefully we can replace this with getStaticProps once this issue is fixed:\n// https://github.com/vercel/next.js/discussions/10949\n\n\nMyApp.getInitialProps = async ctx => {\n  // Calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(ctx); // Fetch global site settings from Strapi\n  // Pass the data to our page via props\n\n  const [global, articles, categories, homepage, games, players, coaches] = await Promise.all([fetchAPI(\"/global\"), fetchAPI(\"/articles?status=published\"), fetchAPI(\"/categories\"), fetchAPI(\"/homepage\"), fetchAPI(\"/games\"), fetchAPI(\"/players\"), fetchAPI(\"/coaches\")]);\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    pageProps: {\n      global,\n      articles,\n      categories,\n      homepage,\n      games,\n      players,\n      coaches\n    }\n  });\n};\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}